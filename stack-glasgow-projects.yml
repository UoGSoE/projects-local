version: "3.7"
services:
  app:
    image: localhost:5000/glasgow-projects-web
    depends_on:
      - redis
    networks:
      - proxy
      - mysql
    expose:
      - "80"
    environment:
      CONTAINER_ROLE: app
    secrets:
      - source: dotenv
        target: .env
    deploy:
      replicas: 3
      labels:
        - "traefik.backend=${TRAEFIK_BACKEND}"
        - "traefik.docker.network=proxy"
        - "traefik.frontend.rule=Host:${TRAEFIK_HOSTNAME}"
        - "traefik.enable=true"
        - "traefik.port=80"
        - "traefik.default.protocol=http"
    healthcheck:
      test: ["CMD", "/usr/local/bin/app-healthcheck"]
      interval: 5m
      timeout: 5s
      start_period: 30s

  scheduler:
    image: localhost:5000/glasgow-projects-web
    depends_on:
      - app
    deploy:
      labels:
        - "traefik.enable=false"
    networks:
      - mysql
    environment:
      CONTAINER_ROLE: scheduler
    secrets:
      - source: dotenv
        target: .env
    healthcheck:
      test: ["CMD", "/usr/local/bin/app-healthcheck"]
      interval: 5m
      timeout: 5s
      start_period: 30s

  queue:
    image: localhost:5000/glasgow-projects-web
    depends_on:
      - app
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=false"
    networks:
      - mysql
    environment:
      CONTAINER_ROLE: queue
    secrets:
      - source: dotenv
        target: .env
    healthcheck:
      test: ["CMD", "/usr/local/bin/app-healthcheck"]
      interval: 5m
      timeout: 5s
      start_period: 30s

  migrations:
    image: localhost:5000/glasgow-projects-web
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=false"
    networks:
      - mysql
    environment:
      CONTAINER_ROLE: migrations
    secrets:
      - source: dotenv
        target: .env

  redis:
    image: redis:4
    deploy:
      labels:
        - "traefik.enable=false"

secrets:
  dotenv:
    external: true
    name: ${DOTENV_NAME}

networks:
  proxy:
    external: true
  mysql:
    external: true
